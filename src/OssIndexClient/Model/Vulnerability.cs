using System;
using System.Collections.Generic;

namespace OssIndexClient
{
    public class Vulnerability
    {
        public Vulnerability(
            Guid id,
            string title,
            string description,
            double cvssScore,
            string cvssVector,
            string cve,
            string? cwe,
            string reference,
            IReadOnlyList<string>? versionRanges)
        {
            Guard.AgainstEmpty(id, nameof(id));
            Guard.AgainstNullOrEmpty(title, nameof(title));
            Guard.AgainstNullOrEmpty(description, nameof(description));
            Guard.AgainstNullOrEmpty(cvssVector, nameof(cvssVector));
            Guard.AgainstNullOrEmpty(cve, nameof(cve));
            Guard.AgainstNullOrEmpty(reference, nameof(reference));
            Id = id;
            Title = title;
            Description = description;
            CvssScore = cvssScore;
            CvssVector = cvssVector;
            Cve = cve;
            Cwe = cwe;
            Reference = reference;
            VersionRanges = versionRanges;
        }

        public Guid Id { get; }
        public string Title { get; }
        public string Description { get; }

        /// <summary>
        /// Common Vulnerability Scoring System. https://en.wikipedia.org/wiki/Common_Vulnerability_Scoring_System
        /// </summary>
        public double CvssScore { get; }

        /// <summary>
        /// Common Vulnerability Scoring System Vector. https://en.wikipedia.org/wiki/Common_Vulnerability_Scoring_System#Calculations
        /// </summary>
        public string CvssVector { get; }

        /// <summary>
        /// Common Vulnerabilities and Exposures. https://en.wikipedia.org/wiki/Common_Vulnerabilities_and_Exposures
        /// </summary>
        public string Cve { get; }

        /// <summary>
        /// Common Weakness Enumeration. https://en.wikipedia.org/wiki/Common_Weakness_Enumeration
        /// </summary>
        public string? Cwe { get; }

        public string Reference { get; }
        public IReadOnlyList<string>? VersionRanges { get; }
    }
}